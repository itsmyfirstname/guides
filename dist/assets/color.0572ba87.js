import{l as g,p as r,e as u,i as o,M as i,N as m,O as v,P as l}from"./index.33fd6a90.js";function f(e){const t=g("useRender");t.render=e}const C=(e,t)=>{const n=e.__vccOpts||e;for(const[s,a]of t)n[s]=a;return n},b=r({height:[Number,String],maxHeight:[Number,String],maxWidth:[Number,String],minHeight:[Number,String],minWidth:[Number,String],width:[Number,String]},"dimension");function x(e){return{dimensionStyles:u(()=>({height:o(e.height),maxHeight:o(e.maxHeight),maxWidth:o(e.maxWidth),minHeight:o(e.minHeight),minWidth:o(e.minWidth),width:o(e.width)}))}}const S=r({tag:{type:String,default:"div"}},"tag"),k=r({elevation:{type:[Number,String],validator(e){const t=parseInt(e);return!isNaN(t)&&t>=0&&t<=24}}},"elevation");function y(e){return{elevationClasses:u(()=>{const n=i(e)?e.value:e.elevation,s=[];return n==null||s.push(`elevation-${n}`),s})}}const N=r({rounded:{type:[Boolean,Number,String],default:void 0}},"rounded");function H(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:m();return{roundedClasses:u(()=>{const s=i(e)?e.value:e.rounded,a=[];if(s===!0||s==="")a.push(`${t}--rounded`);else if(typeof s=="string"||s===0)for(const c of String(s).split(" "))a.push(`rounded-${c}`);return a})}}function d(e){return v(()=>{const t=[],n={};return e.value.background&&(l(e.value.background)?n.backgroundColor=e.value.background:t.push(`bg-${e.value.background}`)),e.value.text&&(l(e.value.text)?(n.color=e.value.text,n.caretColor=e.value.text):t.push(`text-${e.value.text}`)),{colorClasses:t,colorStyles:n}})}function W(e,t){const n=u(()=>({text:i(e)?e.value:t?e[t]:null})),{colorClasses:s,colorStyles:a}=d(n);return{textColorClasses:s,textColorStyles:a}}function P(e,t){const n=u(()=>({background:i(e)?e.value:t?e[t]:null})),{colorClasses:s,colorStyles:a}=d(n);return{backgroundColorClasses:s,backgroundColorStyles:a}}export{C as _,k as a,N as b,P as c,y as d,H as e,W as f,b as g,x as h,d as i,S as m,f as u};
